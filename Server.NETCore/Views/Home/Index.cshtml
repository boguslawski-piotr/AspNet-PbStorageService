@using Microsoft.AspNetCore.Identity
@using pbXStorage.Server.NETCore.Data

@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager
@inject ApplicationDbContext DbContext
@inject pbXStorage.Server.Manager Manager

@{

	ViewData["Title"] = "Home Page";
}

@{
	ApplicationUser user = await UserManager.GetUserAsync(User);
	if (user == null || !SignInManager.IsSignedIn(User))
	{
		<h2>Welcome :)</h2>
		<p>TODO: some description...</p>
		<p><a asp-area="" asp-controller="Account" asp-action="Register">Register</a> or <a asp-area="" asp-controller="Account" asp-action="Login">Log in</a></p>
	}
	else
	{
		<h2>Repositories</h2>

		<div class="row">
			<div class="col-md-12">
				<a asp-area="" asp-controller="Home" asp-action="NewRepository">Create new...</a>
			</div>
		</div>

		{
			DbContext.Entry(user)
				.Collection(nameof(ApplicationUser.Repositories))
				.Load();

			foreach (var r in user.Repositories)
			{
				<hr />

				try
				{
					pbXStorage.Server.Repository repository = await Manager.GetRepositoryAsync(r.RepositoryId);

					string codeRepositoryId = repository.Id;

					<div class="row">
						<div class="col-md-9">
							<h4>@repository.Id</h4>

							@if (ViewData["SourceCode"] != null && (string)ViewData["SourceCode"] == repository.Id)
							{
								codeRepositoryId = null;

								<h6>Public key:</h6>
								<blockquote style="font-size: 60%">
									@repository.PublicKey
								</blockquote>

								string uri = this.Context.Request.IsHttps ? "https://" : "http://" +
											 this.Context.Request.Host +
											 "/api/storage/";

								<h6>Code for pbXNet.StorageOnPbXStorage:</h6>
								<blockquote style="font-size: 60%; font-family: Courier New, Courier, monospace">
									PbXStorageSettings pbXStorageSettings = new PbXStorageSettings() <br />
									{<br />
									&nbsp;&nbsp;ApiUri = new Uri("@uri"),<br />
									&nbsp;&nbsp;AppKeys = new RsaCryptographer().GenerateKeyPair(),<br />
									&nbsp;&nbsp;RepositoryId = "@repository.Id",<br />
									&nbsp;&nbsp;RepositoryPublicKey = new RsaKeyPair(<br />
									&nbsp;&nbsp;&nbsp;&nbsp;null,<br />
									&nbsp;&nbsp;&nbsp;&nbsp;"@repository.PublicKey"),<br />
									};
								</blockquote>
							}
						</div>

						<div class="col-md-1">
							<form asp-controller="Home" asp-action="IndexWithSourceCode" method="post" class="form-inline">
								<input value="@codeRepositoryId" name="repositoryId" type="hidden" />
								<input type="submit" class="btn btn-link" value="Code" title="Show repository public key and some auxiliary code" />
							</form>
						</div>

						<div class="col-md-1">
							<form asp-controller="Home" asp-action="ViewRepository" method="post" class="form-inline">
								<input value="@repository.Id" name="RepositoryId" type="hidden" />
								<input type="submit" class="btn btn-link" value="Content" title="View repository content" />
							</form>
						</div>

						<div class="col-md-1">
							<form asp-controller="Home" asp-action="RemoveRepository" method="post" class="form-inline">
								<input value="@repository.Id" name="repositoryId" type="hidden" />
								<input type="submit" class="btn btn-link" value="Delete" title="Delete repository" />
							</form>
						</div>
					</div>
				}
				catch (Exception ex)
				{
					<div class="row">
						<div class="col-md-12">
							<h4>ERROR: @ex.Message</h4>
						</div>
					</div>
				}
			}
		}
	}
}
