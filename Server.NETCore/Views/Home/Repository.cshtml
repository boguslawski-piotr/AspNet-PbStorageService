@{ ViewData["Title"] = "Repository"; }

@using pbXStorage.Server;

@*@inject SignInManager<ApplicationUser> SignInManager
	@inject UserManager<ApplicationUser> UserManager
	@inject ApplicationDbContext DbContext
	@inject pbXStorage.Server.Manager Manager*@

@{
	var repository = (Repository)ViewData["repository"];
	var ids = (IEnumerable<IdInDb>)ViewData["ids"];
}

<h2>@ViewData["Title"]</h2>
<h4>@repository.Name</h4>
<hr />

<p style="font-size: 70%">
	ID: @repository.Id
</p>
<p style="font-size: 60%">
	PK: @repository.PublicKey
</p>
<hr />

@{
	if (ids.Any())
	{
		foreach (var sid in ids.Where((_id) => _id.Type == IdInDbType.Storage).OrderBy((__id) => __id.Id))
		{
			<h5>@sid.Id</h5>
			<p>
				@{ bool first = true; }
				@foreach (var tid in ids.Where((_id) => _id.StorageId.EndsWith(sid.Id) && _id.Type == IdInDbType.Thing).OrderBy((__id) => __id.Id))
				{
					string id = tid.Id;
					if (!first)
					{
						id = ", " + id;
					}

					@id

					first = false;
				}
			</p>
		}

		foreach (var tid in ids.Where((_id) => _id.StorageId == repository.Id && _id.Type == IdInDbType.Thing).OrderBy((__id) => __id.Id))
		{
			<h6>@tid.Id</h6>
		}
	}
	else
	{
		<p>Nothing found.</p>
	}
}

<hr />

<form asp-controller="Home" asp-action="Repositories" method="post" class="form-inline">
	<input type="submit" class="btn btn-default" value="Go back" title="" /></p>
</form>
