@{ViewData["Title"] = "Repositories"; }

@*@using Microsoft.AspNetCore.Identity
	@using pbXStorage.Server.AspNetCore.Data*@

@*@inject SignInManager<ApplicationUser> SignInManager
	@inject UserManager<ApplicationUser> UserManager
	@inject ApplicationDbContext DbContext
	@inject pbXStorage.Repositories.Manager Manager*@

@{
	<h2>@ViewData["Title"]</h2>
	<hr />

	<div class="row">
		<div class="col-md-12">
			<form asp-controller="Home" asp-action="NewRepository" method="post" class="form-inline">
				<p><input type="text" name="name" class="form-control" style="width: 500px" />&nbsp;<input type="submit" class="btn btn-default" value="Create new..." title="" /></p>
			</form>
			@if (ViewData["error"] != null)
			{
				<p class="text-danger">@ViewData["error"]</p>
			}
		</div>
	</div>

	<hr style="font-size: 60%; margin: 10px 0 10px 0" />

	foreach (var repository in (List<pbXStorage.Repositories.Repository>)ViewData["repositories"])
	{
		<div class="row">
			<div class="col-md-10">
				<h4>@repository.Name</h4>
			</div>

			<div class="col-md-1 center-block">
				<form asp-controller="Home" asp-action="Repository" method="post" class="form-inline">
					<input value="@repository.Id" name="repositoryId" type="hidden" />
					<input type="submit" class="btn btn-link" value="View" title="" />
				</form>
			</div>

			<div class="col-md-1 center-block">
				<form asp-controller="Home" asp-action="RemoveRepository" method="post" class="form-inline">
					<input value="@repository.Id" name="repositoryId" type="hidden" />
					<input type="submit" class="btn btn-link text-danger" style="color: red" value="Delete" title="" />
				</form>
			</div>
		</div>

		<hr style="font-size: 60%; margin: 10px 0 10px 0" />
	}
}
